-- Display all customers who live in 'Delhi'

select name,city from customers where city = "Delhi";

-- Find the average rating of all restaurants in 'Mumbai' 

select avg(rating) from restaurants where city = "Mumbai";

-- List all customers who have placed at least one order.
select customers.customer_id,orders.order_id from customers join
orders on customers.customer_id = orders.customer_id ;

-- Display the total number of orders placed by each customer.

select c.name,count(o.order_id) as total_orders from customers c left join 
orders o on c.customer_id = o.customer_id group by c.name;

-- Find the total revenue generated by each restaurant.

select r.name,sum(o.total_amount) from restaurants r left join orders o 
on r.restaurant_id = o.restaurant_id group by r.name;

-- Find the top 5 restaurants with the highest average rating.

select name,avg(rating) as highest_avg from restaurants group by name
order by highest_avg desc limit 5;

-- Display all customers who have never placed an order.

select customers.name from customers left join
orders on customers.customer_id = orders.customer_id where 
orders.order_id is null;

-- Find the number of orders placed by each customer in 'Mumbai'.

select c.name,count(o.order_id) from customers c left join orders o 
on c.customer_id = o.customer_id where c.city = "Mumbai" group by c.name;

-- Display all orders placed in the last 30 days
select * from orders where 
order_date>=date_sub(curdate(),interval 30 day);

-- List all delivery partners who have completed more than 1 delivery

select d.name,count(o.order_id) from deliverypartners d left join 
orderdelivery o  on d.partner_id = o.partner_id group by d.name
having count(o.order_id) >=1 ;

-- Find the customers who have placed orders on exactly three different days.
select customers.name from customers join orders on customers.customer_id = orders.order_id
group by customers.name having count(distinct orders.order_date) = 3;

-- Find the delivery partner who has worked with the most different customers.

SELECT dp.partner_id, dp.name, COUNT(DISTINCT o.customer_id) AS unique_customers
FROM OrderDelivery od
JOIN Orders o ON od.order_id = o.order_id
JOIN DeliveryPartners dp ON od.partner_id = dp.partner_id
GROUP BY dp.partner_id, dp.name
ORDER BY unique_customers DESC
LIMIT 1;

-- Find the customers who have placed orders on exactly three different days.

SELECT c.customer_id, c.name, COUNT(DISTINCT DATE(o.order_date)) AS order_days
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.name
HAVING COUNT(DISTINCT DATE(o.order_date)) = 3;













